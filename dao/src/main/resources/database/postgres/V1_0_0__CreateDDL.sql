CREATE TABLE answers (id  SERIAL NOT NULL, code VARCHAR(255), language INTEGER NOT NULL, title VARCHAR(255) NOT NULL, QUESTION_ID INTEGER, order_in_question INTEGER, PRIMARY KEY (id));
CREATE TABLE labels (id  SERIAL NOT NULL, language VARCHAR(255), title VARCHAR(255) NOT NULL, LABELSET_ID INTEGER, sort_order INTEGER, PRIMARY KEY (id));
CREATE TABLE label_sets (id  SERIAL NOT NULL, language VARCHAR(255), name VARCHAR(255), PRIMARY KEY (id));
CREATE TABLE pages (id  SERIAL NOT NULL, language VARCHAR(255) NOT NULL, TITLE VARCHAR(255) NOT NULL, SURVEY_ID INTEGER, order_in_survey INTEGER, PRIMARY KEY (id));
CREATE TABLE participants (id  SERIAL NOT NULL, email VARCHAR(255), firstname VARCHAR(255), language VARCHAR(255), lastname VARCHAR(255), PRIMARY KEY (id));
CREATE TABLE questions (id  SERIAL NOT NULL, is_required BOOLEAN, language VARCHAR(255), title VARCHAR(255), type VARCHAR(255), PAGE_ID INTEGER, PARENT_ID INTEGER, SURVEY_ID INTEGER, order_in_page INTEGER, order_in_subquestions INTEGER, PRIMARY KEY (id));
CREATE TABLE surveys (id  SERIAL NOT NULL, created_date TIMESTAMP, language VARCHAR(255), last_modified_date TIMESTAMP, DESCRIPTION TEXT, TITLE VARCHAR(255), WELCOMETEXT TEXT, CREATEDBY_ID INTEGER, LASTMODIFIEDBY_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE survey_runnings (id  SERIAL NOT NULL, name VARCHAR(255), SURVEY_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE answer_translations (id  SERIAL NOT NULL, language VARCHAR(255), text VARCHAR(255), ANSWER_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE label_translations (id  SERIAL NOT NULL, language VARCHAR(255), title VARCHAR(255) NOT NULL, LABEL_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE question_translations (id  SERIAL NOT NULL, language VARCHAR(255), text VARCHAR(255), QUESTION_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE survey_translations (id  SERIAL NOT NULL, language VARCHAR(255), DESCRIPTION TEXT, TITLE VARCHAR(255), WELCOMETEXT TEXT, SURVEY_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE page_translations (id  SERIAL NOT NULL, language VARCHAR(255), TITLE VARCHAR(255) NOT NULL, PAGE_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE users (id  SERIAL NOT NULL, created_date TIMESTAMP, email VARCHAR(255) NOT NULL UNIQUE, first_name VARCHAR(255) NOT NULL, last_modified_date TIMESTAMP, last_name VARCHAR(255) NOT NULL, CREATEDBY_ID INTEGER, LASTMODIFIEDBY_ID INTEGER, PRIMARY KEY (id));
CREATE TABLE SURVEYRUNNING_PARTICIPANT (participants_ID INTEGER NOT NULL, surveyRunning_ID INTEGER NOT NULL, PRIMARY KEY (participants_ID, surveyRunning_ID));
ALTER TABLE answers ADD CONSTRAINT FK_answers_QUESTION_ID FOREIGN KEY (QUESTION_ID) REFERENCES questions (id);
ALTER TABLE labels ADD CONSTRAINT FK_labels_LABELSET_ID FOREIGN KEY (LABELSET_ID) REFERENCES label_sets (id);
ALTER TABLE pages ADD CONSTRAINT FK_pages_SURVEY_ID FOREIGN KEY (SURVEY_ID) REFERENCES surveys (id);
ALTER TABLE questions ADD CONSTRAINT FK_questions_SURVEY_ID FOREIGN KEY (SURVEY_ID) REFERENCES surveys (id);
ALTER TABLE questions ADD CONSTRAINT FK_questions_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES questions (id);
ALTER TABLE questions ADD CONSTRAINT FK_questions_PAGE_ID FOREIGN KEY (PAGE_ID) REFERENCES pages (id);
ALTER TABLE surveys ADD CONSTRAINT FK_surveys_LASTMODIFIEDBY_ID FOREIGN KEY (LASTMODIFIEDBY_ID) REFERENCES users (id);
ALTER TABLE surveys ADD CONSTRAINT FK_surveys_CREATEDBY_ID FOREIGN KEY (CREATEDBY_ID) REFERENCES users (id);
ALTER TABLE survey_runnings ADD CONSTRAINT FK_survey_runnings_SURVEY_ID FOREIGN KEY (SURVEY_ID) REFERENCES surveys (id);
ALTER TABLE answer_translations ADD CONSTRAINT FK_answer_translations_ANSWER_ID FOREIGN KEY (ANSWER_ID) REFERENCES answers (id);
ALTER TABLE label_translations ADD CONSTRAINT FK_label_translations_LABEL_ID FOREIGN KEY (LABEL_ID) REFERENCES labels (id);
ALTER TABLE question_translations ADD CONSTRAINT FK_question_translations_QUESTION_ID FOREIGN KEY (QUESTION_ID) REFERENCES questions (id);
ALTER TABLE survey_translations ADD CONSTRAINT FK_survey_translations_SURVEY_ID FOREIGN KEY (SURVEY_ID) REFERENCES surveys (id);
ALTER TABLE page_translations ADD CONSTRAINT FK_page_translations_PAGE_ID FOREIGN KEY (PAGE_ID) REFERENCES pages (id);
ALTER TABLE users ADD CONSTRAINT FK_users_CREATEDBY_ID FOREIGN KEY (CREATEDBY_ID) REFERENCES users (id);
ALTER TABLE users ADD CONSTRAINT FK_users_LASTMODIFIEDBY_ID FOREIGN KEY (LASTMODIFIEDBY_ID) REFERENCES users (id);
ALTER TABLE SURVEYRUNNING_PARTICIPANT ADD CONSTRAINT FK_SURVEYRUNNING_PARTICIPANT_participants_ID FOREIGN KEY (participants_ID) REFERENCES participants (id);
ALTER TABLE SURVEYRUNNING_PARTICIPANT ADD CONSTRAINT FK_SURVEYRUNNING_PARTICIPANT_surveyRunning_ID FOREIGN KEY (surveyRunning_ID) REFERENCES survey_runnings (id);
