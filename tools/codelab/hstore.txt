Working with the hstore data type in PostgreSQL 9.0 / 9.1 / 9.2
This is a quick reference explaining how to install the hstore contrib module and interface with it using a variety of use cases I've encountered as time has progressed. If you've encountered any specific use cases which I haven't covered, please feel free to leave your solution in the comments, or ask away-- I'll do my best to assist you. To install the hstore contrib module, simply run this query in the database you wish to use hstore in: CREATE EXTENSION hstore; In these examples, we assume you have a table named "hstore_test" with two columns named "item_id" (serial) and "data" (hstore). Set the contents of an hstore INSERT INTO hstore_test (data) VALUES ('"key1"=>"value1", "key2"=>"value2", "key3"=>"value3"') Delete a key from an hstore UPDATE hstore_test SET data = delete(data, 'key2') Add a key/value to an hstore / replace the value of an existing key within an hstore UPDATE hstore_test SET data = data || '"key4"=>"some value"'::hstore Return records where hstore contains a specific key SELECT * FROM hstore_test WHERE data ? 'key4' Return records where hstore does not contain a specific key SELECT * FROM hstore_test WHERE NOT data ? 'key5' Returns records where a specific key/value are present within an hstore. SELECT * FROM hstore_test WHERE data @> '"key4"=>"some value"'::hstore Return a specific key's value from an hstore SELECT data -> 'key4' FROM hstore_test Return hstore keys/values as individual records (pivot) SELECT item_id, (each(data)).* FROM hstore_test WHERE item_id = 2

SELECT * FROM hstore_test WHERE data @> '"key4"=>"some value"'::hstore

select distinct e.* from users u join user_role ur on u.id=ur.user_id join role r on ur.role_id=r.id join permission p on r.id=p.role_id join users e on p.entity_id = e.id where u.id = 1 and p.scope='U' and (cast(p.mask as bit(3)) & b'001')=b'001'